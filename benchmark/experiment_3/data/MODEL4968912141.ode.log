┌ Debug: find_reductions of 
│   system =
│    RasGTP_minus_NF1_star_'(t) = 14399//125000000000000000*RasGDP_minus_NF1_Pi(t) + 273581//1250000000000000*RasGTP_minus_NF1(t) - 1309//100000000000000*RasGTP_minus_NF1_star_(t)
│    RasGTP_minus_NF1'(t) = 196349501271//312500000000000000000000*NF1(t)*RasGTP(t) - 13887181//62500000000000000*RasGTP_minus_NF1(t) + 14399//5000000000000000*RasGTP_minus_NF1_star_(t)
│    NF1'(t) = -196349501271//312500000000000000000000*NF1(t)*RasGDP(t) - 196349501271//312500000000000000000000*NF1(t)*RasGTP(t) + 121737//5000000000000000*RasGDP_NF1(t) + 208131//62500000000000000*RasGTP_minus_NF1(t)
│    RasGTP'(t) = -196349501271//312500000000000000000000*NF1(t)*RasGTP(t) + 208131//62500000000000000*RasGTP_minus_NF1(t)
│    RasGDP_minus_NF1_Pi'(t) = 176713009011//3125000000000000000000000000*Pi(t)*RasGDP_NF1(t) - 2632399//125000000000000000*RasGDP_minus_NF1_Pi(t) + 51051//5000000000000000*RasGTP_minus_NF1_star_(t)
│    Pi'(t) = -176713009011//3125000000000000000000000000*Pi(t)*RasGDP_NF1(t) + 1309//62500000000000*RasGDP_minus_NF1_Pi(t)
│    RasGDP'(t) = -196349501271//312500000000000000000000*NF1(t)*RasGDP(t) + 121737//5000000000000000*RasGDP_NF1(t)
│    RasGDP_NF1'(t) = 196349501271//312500000000000000000000*NF1(t)*RasGDP(t) - 176713009011//3125000000000000000000000000*Pi(t)*RasGDP_NF1(t) - 121737//5000000000000000*RasGDP_NF1(t) + 1309//62500000000000*RasGDP_minus_NF1_Pi(t)
│    
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:209
[ Info: constructed a set of 6 matrices 8×8 from the system Jacobian
[ Info: Called invariant_subspace_global on 6 matrices of shape (8, 8)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 40
┌ Debug: Dimension of the algebra is 40
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: computed the radical of dimension 15
[ Info: Found radical of size 15
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 3 dimensional subspace found
[ Info: found 3-dim subspace in ambient 8-dim
[ Info: Calling myself recursively in restricted subspace
┌ Debug: Get to a 3 -dimensional space with zero action
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:124
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 6 matrices of shape (5, 5)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 25
┌ Debug: Dimension of the algebra is 25
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
┌ Debug: Before positivization: BigInt[1 0 0 1 1 0 1 1; 0 1 0 0 1 1 1 1; 0 0 1 1 1 1 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 1 1 0 1 1; 0 1 0 0 1 1 1 1; 0 0 1 1 1 1 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 1 1 0 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 1 1 0 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 1 1 0 1 1; 0 1 0 0 1 1 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 1 1 0 1 1; 0 1 0 0 1 1 1 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Found reductions
│   result =
│    3-element Vector{Dict{Symbol, Vector{fmpq_mpoly}}}:
│     Dict(:new_system => [0], :new_vars => [NF1 + RasGDP_NF1 + RasGDP_minus_NF1_Pi + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_])
│     Dict(:new_system => [0, 0], :new_vars => [NF1 + RasGDP_NF1 + RasGDP_minus_NF1_Pi + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_, Pi + RasGDP_minus_NF1_Pi + RasGTP + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_])
│     Dict(:new_system => [0, 0, 0], :new_vars => [NF1 + RasGDP_NF1 + RasGDP_minus_NF1_Pi + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_, Pi + RasGDP_minus_NF1_Pi + RasGTP + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_, RasGDP + RasGDP_NF1 + RasGDP_minus_NF1_Pi + RasGTP + RasGTP_minus_NF1 + RasGTP_minus_NF1_star_])
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:229
