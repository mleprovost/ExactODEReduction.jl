Original system:

[
MAPK => -20*MAPK*MEKpp + 3//5*MAPKMEKpp + 1//10*MAPKpMAPKPH,
MAPKp => 1//10*MAPKMEKpp - 5*MAPKPH*MAPKp - 20*MAPKp*MEKpp + 2//5*MAPKpMAPKPH + 3//5*MAPKpMEKpp + 1//10*MAPKppMAPKPH,
RAF => -RAF*RAFK + 2//5*RAFRAFK + 1//10*RAFpRAFPH,
RAFPH => -1//2*RAFPH*RAFp + 3//5*RAFpRAFPH,
MAPKpMEKpp => 20*MAPKp*MEKpp - 7//10*MAPKpMEKpp,
MEKpRAFp => 33//10*MEKp*RAFp - 1//2*MEKpRAFp,
RAFp => -33//10*MEK*RAFp + 13//25*MEKRAFp - 33//10*MEKp*RAFp + 1//2*MEKpRAFp - 1//2*RAFPH*RAFp + 1//10*RAFRAFK + 1//2*RAFpRAFPH,
MEKpMEKPH => 10*MEKPH*MEKp - 9//10*MEKpMEKPH,
MEKppMEKPH => 10*MEKPH*MEKpp - 9//10*MEKppMEKPH,
MAPKpp => -5*MAPKPH*MAPKpp + 1//10*MAPKpMEKpp + 2//5*MAPKppMAPKPH,
MEKp => -10*MEKPH*MEKp + 1//10*MEKRAFp - 33//10*MEKp*RAFp + 4//5*MEKpMEKPH + 2//5*MEKpRAFp + 1//10*MEKppMEKPH,
MEKRAFp => 33//10*MEK*RAFp - 13//25*MEKRAFp,
MAPKppMAPKPH => 5*MAPKPH*MAPKpp - 1//2*MAPKppMAPKPH,
MAPKMEKpp => 20*MAPK*MEKpp - 7//10*MAPKMEKpp,
MEKPH => -10*MEKPH*MEKp - 10*MEKPH*MEKpp + 9//10*MEKpMEKPH + 9//10*MEKppMEKPH,
MAPKpMAPKPH => 5*MAPKPH*MAPKp - 1//2*MAPKpMAPKPH,
MAPKPH => -5*MAPKPH*MAPKp - 5*MAPKPH*MAPKpp + 1//2*MAPKpMAPKPH + 1//2*MAPKppMAPKPH,
RAFpRAFPH => 1//2*RAFPH*RAFp - 3//5*RAFpRAFPH,
MEK => -33//10*MEK*RAFp + 21//50*MEKRAFp + 1//10*MEKpMEKPH,
MEKpp => -20*MAPK*MEKpp + 7//10*MAPKMEKpp - 20*MAPKp*MEKpp + 7//10*MAPKpMEKpp - 10*MEKPH*MEKpp + 1//10*MEKpRAFp + 4//5*MEKppMEKPH,
RAFK => -RAF*RAFK + 1//2*RAFRAFK,
RAFRAFK => RAF*RAFK - 1//2*RAFRAFK
]

Reductions:

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKp + MAPKpMAPKPH + MAPKpp + MAPKppMAPKPH - MEK - MEKp - MEKpMEKPH - MEKpp - MEKppMEKPH + RAF + RAFRAFK + RAFp + RAFpRAFPH]
new_system = 
[
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKp + MAPKpMAPKPH + MAPKpp + MAPKppMAPKPH - MEK - MEKp - MEKpMEKPH - MEKpp - MEKppMEKPH + RAF + RAFRAFK + RAFp + RAFpRAFPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKp + MEKpMEKPH + MEKpp + MEKppMEKPH - RAF - RAFRAFK - RAFp - RAFpRAFPH]
new_system = 
[
0,
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKp + MAPKpMAPKPH + MAPKpp + MAPKppMAPKPH - MEK - MEKp - MEKpMEKPH - MEKpp - MEKppMEKPH + RAF + RAFRAFK + RAFp + RAFpRAFPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKp + MEKpMEKPH + MEKpp + MEKppMEKPH - RAF - RAFRAFK - RAFp - RAFpRAFPH, MAPKPH + MAPKpMAPKPH + MAPKppMAPKPH]
new_system = 
[
0,
0,
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKp + MAPKpMAPKPH + MAPKpp + MAPKppMAPKPH - MEK - MEKp - MEKpMEKPH - MEKpp - MEKppMEKPH + RAF + RAFRAFK + RAFp + RAFpRAFPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKp + MEKpMEKPH + MEKpp + MEKppMEKPH - RAF - RAFRAFK - RAFp - RAFpRAFPH, MAPKPH + MAPKpMAPKPH + MAPKppMAPKPH, MEKPH + MEKpMEKPH + MEKppMEKPH]
new_system = 
[
0,
0,
0,
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKMEKpp + MAPKp + MAPKpMAPKPH + MAPKpMEKpp + MAPKpp + MAPKppMAPKPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKRAFp + MEKp + MEKpMEKPH + MEKpRAFp + MEKpp + MEKppMEKPH, MAPKPH + MAPKpMAPKPH + MAPKppMAPKPH, MEKPH + MEKpMEKPH + MEKppMEKPH, MEKRAFp + MEKpRAFp + RAF + RAFRAFK + RAFp + RAFpRAFPH]
new_system = 
[
0,
0,
0,
0,
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKMEKpp + MAPKp + MAPKpMAPKPH + MAPKpMEKpp + MAPKpp + MAPKppMAPKPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKRAFp + MEKp + MEKpMEKPH + MEKpRAFp + MEKpp + MEKppMEKPH, MAPKPH + MAPKpMAPKPH + MAPKppMAPKPH, MEKPH + MEKpMEKPH + MEKppMEKPH, MEKRAFp + MEKpRAFp + RAF + RAFRAFK + RAFp + RAFpRAFPH, RAFK + RAFRAFK]
new_system = 
[
0,
0,
0,
0,
0,
0
]

Interesting
new_vars = fmpq_mpoly[MAPK + MAPKMEKpp + MAPKp + MAPKpMAPKPH + MAPKpMEKpp + MAPKpp + MAPKppMAPKPH, MAPKMEKpp + MAPKpMEKpp + MEK + MEKRAFp + MEKp + MEKpMEKPH + MEKpRAFp + MEKpp + MEKppMEKPH, MAPKPH + MAPKpMAPKPH + MAPKppMAPKPH, MEKPH + MEKpMEKPH + MEKppMEKPH, MEKRAFp + MEKpRAFp + RAF + RAFRAFK + RAFp + RAFpRAFPH, RAFK + RAFRAFK, RAFPH + RAFpRAFPH]
new_system = 
[
0,
0,
0,
0,
0,
0,
0
]


