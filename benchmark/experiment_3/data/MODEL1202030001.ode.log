┌ Debug: find_reductions of 
│   system =
│    s0_1'(t) = 166053878316273//10000000000000000000*s0_0(t)*s0_3(t) + 166053878316273//20000000000000000000*s0_2(t)
│    s0_7'(t) = 60*s0_3(t) + 66421551326509//4000000000000000000*s0_6(t)
│    s0_0'(t) = 60*s0_1(t) + 3//2*s0_2(t) + 60*s0_3(t)
│    s0_3'(t) = 166053878316273//10000000000000000000*s0_0(t)*s0_7(t) + 60*s0_1(t)
│    s0_6'(t) = 3//2*s0_2(t) + 1//500*s0_7(t)
│    s0_2'(t) = 166053878316273//10000000000000000000*s0_0(t)*s0_6(t) + 200*s0_1(t)
│    
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:209
[ Info: constructed a set of 5 matrices 6×6 from the system Jacobian
[ Info: Called invariant_subspace_global on 5 matrices of shape (6, 6)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 36
┌ Debug: Dimension of the algebra is 36
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
┌ Debug: Found reductions
│   result = Dict{Symbol, Vector{fmpq_mpoly}}[]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:229
