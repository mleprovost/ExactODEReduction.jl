┌ Debug: find_reductions of 
│   system =
│    Ga'(t) = 1//100000*G(t)*RL(t)
│    Gbg'(t) = 1//100000*G(t)*RL(t)
│    L'(t) = 1//100*RL(t)
│    SINK'(t) = -1//2500*R(t) - 1//250*RL(t)
│    RL'(t) = 83//25000000000000000000*L(t)*R(t)
│    source'(t) = 0
│    G'(t) = Gbg(t)*Gd(t)
│    Gd'(t) = 11//100*Ga(t)
│    R'(t) = 1//100*RL(t) + 4*source(t)
│    
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:209
[ Info: constructed a set of 7 matrices 9×9 from the system Jacobian
[ Info: Called invariant_subspace_global on 7 matrices of shape (9, 9)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:18
[ Info: found 8-dim subspace in ambient 9-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 7 matrices of shape (8, 8)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 33
┌ Debug: Dimension of the algebra is 33
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: computed the radical of dimension 20
[ Info: Found radical of size 20
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 2 dimensional subspace found
[ Info: found 2-dim subspace in ambient 8-dim
[ Info: Calling myself recursively in restricted subspace
┌ Debug: Get to a 2 -dimensional space with zero action
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:124
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 7 matrices of shape (6, 6)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 24
┌ Debug: Dimension of the algebra is 24
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: computed the radical of dimension 11
[ Info: Found radical of size 11
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 1 dimensional subspace found
[ Info: found 1-dim subspace in ambient 6-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 7 matrices of shape (5, 5)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 19
┌ Debug: Dimension of the algebra is 19
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: computed the radical of dimension 6
[ Info: Found radical of size 6
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 2 dimensional subspace found
[ Info: found 2-dim subspace in ambient 5-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 7 matrices of shape (2, 2)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 4
┌ Debug: Dimension of the algebra is 4
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 7 matrices of shape (3, 3)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 9
┌ Debug: Dimension of the algebra is 9
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
┌ Debug: Before positivization: BigInt[1 0 0 0 0 0 0 0 0; 0 1 0 0 0 0 0 0 0; 0 0 1 0 0 0 0 0 0; 0 0 0 1 0 0 0 0 0; 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 0 0 0 0 0 0; 0 1 0 0 0 0 0 0 0; 0 0 1 0 0 0 0 0 0; 0 0 0 1 0 0 0 0 0; 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 1 -1 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: DimensionMismatch("No suitable matrix found")
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:41
┌ Debug: Before positivization: BigInt[0 1 -1 0 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: DimensionMismatch("No suitable matrix found")
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:41
┌ Debug: Before positivization: BigInt[0 1 -1 0 0 0 0 0 0; 0 0 0 0 1 -1 0 0 0; 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: DimensionMismatch("No suitable matrix found")
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:41
┌ Debug: Before positivization: BigInt[0 1 -1 0 0 0 0 0 0; 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: DimensionMismatch("No suitable matrix found")
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:41
┌ Debug: Found reductions
│   result =
│    5-element Vector{Dict{Symbol, Vector{fmpq_mpoly}}}:
│     Dict(:new_system => [0], :new_vars => [Ga - Gbg])
│     Dict(:new_system => [0, 0], :new_vars => [Ga - Gbg, source])
│     Dict(:new_system => [0, -4*y3, 0], :new_vars => [Ga - Gbg, L - R, source])
│     Dict(:new_system => [0, 1//100*y4, 1//100*y4 + 4*y5, 83//25000000000000000000*y2*y3, 0], :new_vars => [Ga - Gbg, L, R, RL, source])
│     Dict(:new_system => [y3*y4, 1//100000*y1*y7, 1//100000*y1*y7, 11//100*y2, 1//100*y7, 1//100*y7 + 4*y8, 83//25000000000000000000*y5*y6, 0], :new_vars => [G, Ga, Gbg, Gd, L, R, RL, source])
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:229
