┌ Debug: find_reductions of 
│   system =
│    c'(t) = 0
│    rho'(t) = 0
│    sdelta'(t) = 0
│    R'(t) = I(t)*sdelta(t) + S(t)*Z(t)*alpha(t) + S(t)*sdelta(t)
│    I'(t) = S(t)*Z(t)*beta(t)
│    alpha'(t) = 0
│    beta'(t) = 0
│    Z'(t) = I(t)*rho(t) + R(t)*zeta(t)
│    S'(t) = Z(t)*c(t)
│    source'(t) = 0
│    zeta'(t) = 0
│    
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/ExactODEReduction.jl:211
[ Info: constructed a set of 13 matrices 11×11 from the system Jacobian
[ Info: Called invariant_subspace_global on 13 matrices of shape (11, 11)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 10-dim subspace in ambient 11-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (10, 10)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
..[ Info: generated a basis for Algebra of dimension 40
┌ Debug: Dimension of the algebra is 40
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:23
[ Info: Computing the radical..
[ Info: computed the radical of dimension 24
[ Info: Found radical of size 24
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 6 dimensional subspace found
[ Info: found 6-dim subspace in ambient 10-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (6, 6)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 6-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (5, 5)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 5-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (4, 4)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 4-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (3, 3)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 3-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (2, 2)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 2-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 13 matrices of shape (4, 4)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 16
┌ Debug: Dimension of the algebra is 16
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:23
┌ Debug: Before positivization: BigInt[1 0 0 0 0 0 0 0 0 0 0; 0 1 0 0 0 0 0 0 0 0 0; 0 0 1 0 0 0 0 0 0 0 0; 0 0 0 1 0 0 0 0 0 0 0; 0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 0 0 0 0 0 0 0 0; 0 1 0 0 0 0 0 0 0 0 0; 0 0 1 0 0 0 0 0 0 0 0; 0 0 0 1 0 0 0 0 0 0 0; 0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [0 0 0 0 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0 0; 0 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 0 1 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Found reductions Dict{Symbol, Vector{fmpq_mpoly}}[Dict(:new_system => [0], :new_vars => [alpha]), Dict(:new_system => [0, 0], :new_vars => [alpha, beta]), Dict(:new_system => [0, 0, 0], :new_vars => [alpha, beta, c]), Dict(:new_system => [0, 0, 0, 0], :new_vars => [alpha, beta, c, rho]), Dict(:new_system => [0, 0, 0, 0, 0], :new_vars => [alpha, beta, c, rho, sdelta]), Dict(:new_system => [0, 0, 0, 0, 0, 0], :new_vars => [alpha, beta, c, rho, sdelta, zeta]), Dict(:new_system => [y3*y4*y6, y1*y9 + y3*y4*y5 + y3*y9, y4*y7, y1*y8 + y2*y10, 0, 0, 0, 0, 0, 0], :new_vars => [I, R, S, Z, alpha, beta, c, rho, sdelta, zeta])]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/ExactODEReduction.jl:236
