┌ Debug: find_reductions of 
│   system =
│    u'(t) = 0
│    Mad1_CMad2_OMad2'(t) = -Cdc20(t)*Mad1_CMad2_OMad2(t)*gamma_T(t)*u(t) + Mad1_CMad2(t)*OMad2(t)*alpha_T(t)*u(t) - Mad1_CMad2_OMad2(t)*beta_T(t)
│    beta_T'(t) = 0
│    Cdc20_CMad2'(t) = Cdc20(t)*Mad1_CMad2_OMad2(t)*gamma_T(t)*u(t) - Cdc20_CMad2(t)*eta_T(t)
│    Mad1_CMad2'(t) = Cdc20(t)*Mad1_CMad2_OMad2(t)*gamma_T(t)*u(t) - Mad1_CMad2(t)*OMad2(t)*alpha_T(t)*u(t) + Mad1_CMad2_OMad2(t)*beta_T(t)
│    gamma_T'(t) = 0
│    OMad2'(t) = Cdc20_CMad2(t)*eta_T(t) - Mad1_CMad2(t)*OMad2(t)*alpha_T(t)*u(t) + Mad1_CMad2_OMad2(t)*beta_T(t)
│    alpha_T'(t) = 0
│    Cdc20'(t) = -Cdc20(t)*Mad1_CMad2_OMad2(t)*gamma_T(t)*u(t) + Cdc20_CMad2(t)*eta_T(t)
│    eta_T'(t) = 0
│    
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/ExactODEReduction.jl:211
[ Info: constructed a set of 12 matrices 10×10 from the system Jacobian
[ Info: Called invariant_subspace_global on 12 matrices of shape (10, 10)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 20
┌ Debug: Dimension of the algebra is 20
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:23
[ Info: Computing the radical..
[ Info: computed the radical of dimension 16
[ Info: Found radical of size 16
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 8 dimensional subspace found
[ Info: found 8-dim subspace in ambient 10-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (8, 8)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 8-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (7, 7)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 7-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (6, 6)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 6-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (5, 5)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 5-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (4, 4)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 4-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (3, 3)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 3-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (2, 2)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:16
[ Info: found 1-dim subspace in ambient 2-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 12 matrices of shape (2, 2)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 4
┌ Debug: Dimension of the algebra is 4
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/linalg/invariants.jl:23
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1 0; 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1 0; 0 0 0 0 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: DimensionMismatch("No suitable matrix found")
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:41
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 -1 -1 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:36
┌ Debug: After positivization: [1 1 0 0 0 0 0 0 0 0; 0 1 0 1 1 0 0 0 0 0; 0 0 1 1 0 0 0 0 0 0; 0 0 0 0 0 1 0 0 0 0; 0 0 0 0 0 0 1 0 0 0; 0 0 0 0 0 0 0 1 0 0; 0 0 0 0 0 0 0 0 1 0]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/positivizor.jl:48
┌ Debug: Found reductions Dict{Symbol, Vector{fmpq_mpoly}}[Dict(:new_system => [0], :new_vars => [Cdc20 - Mad1_CMad2_OMad2 - OMad2]), Dict(:new_system => [0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2]), Dict(:new_system => [0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2]), Dict(:new_system => [0, 0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2, alpha_T]), Dict(:new_system => [0, 0, 0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2, alpha_T, beta_T]), Dict(:new_system => [0, 0, 0, 0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2, alpha_T, beta_T, eta_T]), Dict(:new_system => [0, 0, 0, 0, 0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2, alpha_T, beta_T, eta_T, gamma_T]), Dict(:new_system => [0, 0, 0, 0, 0, 0, 0, 0], :new_vars => [Cdc20 + Cdc20_CMad2, Cdc20_CMad2 + Mad1_CMad2_OMad2 + OMad2, Mad1_CMad2 + Mad1_CMad2_OMad2, alpha_T, beta_T, eta_T, gamma_T, u])]
└ @ Main.ExactODEReduction ~/exactreduction/Exact-reduction-of-ODE-systems/src/ExactODEReduction.jl:236
