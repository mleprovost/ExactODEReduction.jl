┌ Debug: find_reductions of 
│   system =
│    species_1'(t) = 300*source(t) + 27//200*species_6(t)
│    species_6'(t) = 549//10000*species_1(t)
│    source'(t) = 0
│    species_3'(t) = 1619//1000000*species_2(t)
│    species_4'(t) = 0
│    species_2'(t) = 10*species_3(t)*species_4(t) + 91//5000*species_3(t) + 99//1000000*species_6(t)
│    
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:209
[ Info: constructed a set of 3 matrices 6×6 from the system Jacobian
[ Info: Called invariant_subspace_global on 3 matrices of shape (6, 6)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:18
[ Info: found 1-dim subspace in ambient 6-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 3 matrices of shape (5, 5)
┌ Debug: Found an invariant subspace by saturating the first unit vector
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:18
[ Info: found 2-dim subspace in ambient 5-dim
[ Info: Calling myself recursively in restricted subspace
[ Info: Called invariant_subspace_global on 3 matrices of shape (2, 2)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 2
┌ Debug: Dimension of the algebra is 2
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: Found radical of size 0
[ Info: Radical is trivial, using randomized algorithm
┌ Debug: !!Inside invariant_subspace_semisimple
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/radical.jl:220
┌ Warning: No invariant subspaces defined over Q
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/radical.jl:244
┌ Warning: There is invariant subspace but it is either not defined over Q
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:60
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 3 matrices of shape (3, 3)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 6
┌ Debug: Dimension of the algebra is 6
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
[ Info: Computing the radical..
[ Info: computed the radical of dimension 2
[ Info: Found radical of size 2
[ Info: Radical is nontrivial, computing the general kernel of radical
[ Info: 1 dimensional subspace found
[ Info: found 1-dim subspace in ambient 3-dim
[ Info: Calling myself recursively in complemented subspace
[ Info: Called invariant_subspace_global on 3 matrices of shape (2, 2)
[ Info: generating a basis for Algebra using find_basis_1_β
[ Info: new reduction modulo, 2147483647
[ Info: generated a basis for Algebra of dimension 4
┌ Debug: Dimension of the algebra is 4
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/linalg/invariants.jl:25
┌ Debug: Before positivization: BigInt[1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 0 0 0]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Before positivization: BigInt[1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:36
┌ Debug: After positivization: [1 0 0 0 0 0; 0 1 0 0 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/positivizor.jl:48
┌ Debug: Found reductions
│   result =
│    3-element Vector{Dict{Symbol, Vector{fmpq_mpoly}}}:
│     Dict(:new_system => [0], :new_vars => [source])
│     Dict(:new_system => [0, 300*y1 + 27//200*y3, 549//10000*y2], :new_vars => [source, species_1, species_6])
│     Dict(:new_system => [0, 300*y1 + 27//200*y4, 0, 549//10000*y2], :new_vars => [source, species_1, species_4, species_6])
└ @ Main.ExactODEReduction ~/.julia/dev/ExactODEReduction/src/ExactODEReduction.jl:229
